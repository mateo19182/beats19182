generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String
  role          Role      @default(USER)
  files         File[]
  packs         Pack[]
}

model File {
  id            String        @id @default(cuid())
  name          String
  path          String
  type          String
  size          Int
  imagePath     String?
  hash          String?       // Hash of the file content
  userId        String
  user          User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  tags          Tag[]
  packs         Pack[]
  versions      FileVersion[]
  currentVersion Int         @default(1)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt

  @@index([userId])
  @@unique([userId, name])
  @@index([hash])
}

model FileVersion {
  id            String    @id @default(cuid())
  version       Int
  path          String
  size          Int
  hash          String?   // Hash of the file content
  fileId        String
  file          File      @relation(fields: [fileId], references: [id], onDelete: Cascade)
  createdAt     DateTime  @default(now())

  @@unique([fileId, version])
  @@index([fileId])
  @@index([hash])
}

model Tag {
  id            String    @id @default(cuid())
  name          String    @unique
  files         File[]
}

model Pack {
  id            String    @id @default(cuid())
  name          String
  description   String?
  shareLink     String    @unique
  userId        String
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  files         File[]
  createdAt     DateTime  @default(now())

  @@index([userId])
}